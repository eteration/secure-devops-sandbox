# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:
  COVERALLS_SERVICE_NAME: 'Azure Devops'
  COVERALLS_REPO_TOKEN: 'rTi89wSWAgRSLutOmfGTDzjTgBHrDHM4S'
  COVERALLS_SERVICE_JOB_ID: $(Build.BuildId)
  COVERALLS_GIT_BRANCH: $(Build.SourceBranchName)

jobs:
  - job: "Build_and_Test"
    steps:
    - task: NodeTool@0
      displayName: 'Install node'
      inputs:
        versionSpec: '10.x'
    - script: |
        npm audit --production
      displayName: 'NPM Audit'
    - script: |
        npm install
        npm run build
      displayName: 'NPM Build'
    - script: |
        npm run test
      displayName: 'NPM Test'
    - script: |
        npm run coveralls
      displayName: 'Coveralls Report'
    - task: PublishCodeCoverageResults@1
      displayName: 'Code_coverage_report'
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml
    - task: PublishTestResults@2
      displayName: 'Publish_Test_Results'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '$(System.DefaultWorkingDirectory)/junit.xml'
      # - task: WhiteSource Bolt@20
      #   inputs:
      #     cwd: '$(System.DefaultWorkingDirectory)/' 
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'azure-devops-build'
        organization: 'eteration'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'secure-devops-sandbox.azure-meetups.eteration'
        cliProjectName: 'secure-devops-sandbox'
        cliSources: '.'
    - task: SonarCloudAnalyze@1
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
    - task: Docker@2
      displayName: 'Build and push Docker Image'
      inputs:
        containerRegistry: 'Azure Container Registry (eteration)'
        repository: 'meetup/secure-devops-sandbox'
        command: 'buildAndPush'
        Dockerfile: 'Dockerfile'
        buildContext: '.'
        tags: |
          build$(Build.BuildId)
          devLatest